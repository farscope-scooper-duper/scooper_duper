#!/usr/bin/env python

import rospy
from std_msgs.msg import String,Bool
from geometry_msgs.msg import Pose,Point,Quaternion
from scooper_duper.msg import ItemList, ItemMsg
import subprocess
import numpy as np
import tf 

def spoofer():
    items_in_view_pub = rospy.Publisher('items_in_view', ItemList, queue_size = 10)

    rospy.init_node('vision', anonymous=True)
    
    rate = rospy.Rate(2) # 10hz

    while not rospy.is_shutdown():

        bashCommand = "python vision_system.py"
        
        process = subprocess.Popen(bashCommand.split(), stdout=subprocess.PIPE)
        output, error = process.communicate()
        
        

        f= open("pose.txt","r+")
        lines =f.readlines()
        row_count = 0
        col_count = 0
                
        matrix = np.zeros((4,4))
        print(lines)
        for x in lines:
            

            matrix[(row_count,col_count)] = float(x)        
            print(x) 
            col_count+=1
            if (col_count >= 4):
                col_count = 0
                row_count +=1
        item1 = ItemMsg()

        item1.item = "mommys_helper_outlet_plugs"
        item1.location = 0
        trans = tf.transformations.translation_from_matrix(matrix)
        quat = tf.transformations.quaternion_from_matrix(matrix)
        item1.pose.position.x = trans[0]
        item1.pose.position.y = trans[1]
        item1.pose.position.z = trans[2]
 
        item1.pose.orientation.x = quat[0]
        item1.pose.orientation.y = quat[1]
        item1.pose.orientation.z = quat[2]
        item1.pose.orientation.w = quat[3]
        item_list = ItemList()
        item_list.items = (item1,)
        items_in_view_pub.publish(item_list)
        rospy.loginfo("Vision info published");        
        rate.sleep()

if __name__ == '__main__':
    try:
        spoofer()
    except rospy.ROSInterruptException:
        pass
